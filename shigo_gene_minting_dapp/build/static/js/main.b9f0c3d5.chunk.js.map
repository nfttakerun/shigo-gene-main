{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","allowlist.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","cost","totalSupply","userMintedAmount","onlyAllowlisted","paused","maxMintAmountPerTransaction","mintCount","publicSaleMaxMintAmountPerAddress","allowlistUserAmount","allowlistType","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","getUserMintedAmount","getAllowlistUserAmount","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextDescription","allowlistAddresses","ethers","require","MerkleTree","keccak256","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledImg","StyledLink","App","nameMap","leafNodes","merkleTree","claimingAddress","hexProof","input","len","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","allowlistUserAmountData","setAllowlistUserAmountData","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","addressId","connectFunc","fetch","headers","Accept","abiResponse","json","abi","configResponse","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","getData","getConfig","config","useEffect","map","list","indexOf","style","padding","backgroundColor","alt","src","borderRadius","border","boxShadow","textAlign","fontSize","fontWeight","color","target","href","length","substring","Number","onClick","e","preventDefault","lineHeight","disabled","newMintAmount","decrementMintAmount10","decrementMintAmount","maxMintAmountView","Math","min","incrementMintAmount","incrementMintAmount10","allowlistMaxMintAmount","gasLimit","totalCostWei","String","totalGasLimit","addr","utils","solidityKeccak256","sortPairs","getHexProof","mint","send","to","from","value","once","err","then","receipt","claimNFTs","width","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b9f0c3d5.chunk.js","sourcesContent":["const initialState = {\n  loading: false,\n  account: null,\n  smartContract: null,\n  web3: null,\n  errorMsg: \"\",\n};\n\nconst blockchainReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CONNECTION_REQUEST\":\n      return {\n        ...initialState,\n        loading: true,\n      };\n    case \"CONNECTION_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        account: action.payload.account,\n        smartContract: action.payload.smartContract,\n        web3: action.payload.web3,\n      };\n    case \"CONNECTION_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        errorMsg: action.payload,\n      };\n    case \"UPDATE_ACCOUNT\":\n      return {\n        ...state,\n        account: action.payload.account,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default blockchainReducer;\n","const initialState = {\n  loading: false,\n  cost: 0,\n  totalSupply: 0,\n  userMintedAmount: 0,\n  onlyAllowlisted: true,\n  paused: true,\n  maxMintAmountPerTransaction: 1,\n  mintCount: true,\n  publicSaleMaxMintAmountPerAddress: 10,\n  allowlistUserAmount: 1,\n  allowlistType: 0,\n  error: false,\n  errorMsg: \"\",\n};\n\nconst dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"CHECK_DATA_REQUEST\":\n      return {\n        ...state,\n        loading: true,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_SUCCESS\":\n      return {\n        ...state,\n        loading: false,\n        totalSupply: action.payload.totalSupply,\n        userMintedAmount: action.payload.userMintedAmount,\n        paused: action.payload.paused,\n        onlyAllowlisted: action.payload.onlyAllowlisted,\n        maxMintAmountPerTransaction: action.payload.maxMintAmountPerTransaction,\n        mintCount: action.payload.mintCount,\n        publicSaleMaxMintAmountPerAddress: action.payload.publicSaleMaxMintAmountPerAddress,\n        allowlistUserAmount: action.payload.allowlistUserAmount,\n        allowlistType: action.payload.allowlistType,\n        error: false,\n        errorMsg: \"\",\n      };\n    case \"CHECK_DATA_FAILED\":\n      return {\n        ...initialState,\n        loading: false,\n        error: true,\n        errorMsg: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default dataReducer;\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\nimport dataReducer from \"./data/dataReducer\";\n\nconst rootReducer = combineReducers({\n  blockchain: blockchainReducer,\n  data: dataReducer,\n});\n\nconst middleware = [thunk];\nconst composeEnhancers = compose(applyMiddleware(...middleware));\n\nconst configureStore = () => {\n  return createStore(rootReducer, composeEnhancers);\n};\n\nconst store = configureStore();\n\nexport default store;\n","// log\nimport store from \"../store\";\n\nconst fetchDataRequest = () => {\n  return {\n    type: \"CHECK_DATA_REQUEST\",\n  };\n};\n\nconst fetchDataSuccess = (payload) => {\n  return {\n    type: \"CHECK_DATA_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst fetchDataFailed = (payload) => {\n  return {\n    type: \"CHECK_DATA_FAILED\",\n    payload: payload,\n  };\n};\n\nexport const fetchData = () => {\n  return async (dispatch) => {\n    dispatch(fetchDataRequest());\n    try {\n\n      const blockchain = store.getState().blockchain\n      let totalSupply = await store.getState().blockchain.smartContract.methods.totalSupply().call();\n      let userMintedAmount = await store.getState().blockchain.smartContract.methods.getUserMintedAmount(blockchain.account).call()\n      let paused = await store.getState().blockchain.smartContract.methods.paused().call();\n      let onlyAllowlisted = await store.getState().blockchain.smartContract.methods.onlyAllowlisted().call()\n      let maxMintAmountPerTransaction = await store.getState().blockchain.smartContract.methods.maxMintAmountPerTransaction().call();\n      let mintCount = await store.getState().blockchain.smartContract.methods.mintCount().call()\n      let publicSaleMaxMintAmountPerAddress = await store.getState().blockchain.smartContract.methods.publicSaleMaxMintAmountPerAddress().call()\n      let allowlistUserAmount = await store.getState().blockchain.smartContract.methods.getAllowlistUserAmount(blockchain.account).call()\n      let allowlistType = await store.getState().blockchain.smartContract.methods.allowlistType().call()\n\n      dispatch(\n        fetchDataSuccess({\n          totalSupply,\n          userMintedAmount,\n          paused,\n          onlyAllowlisted,\n          maxMintAmountPerTransaction,\n          mintCount,\n          publicSaleMaxMintAmountPerAddress,\n          allowlistUserAmount,\n          allowlistType,\n        })\n      );\n    } catch (err) {\n      console.log(err);\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\n    }\n  };\n};\n","// constants\nimport Web3EthContract from \"web3-eth-contract\";\nimport Web3 from \"web3\";\n// log\nimport { fetchData } from \"../data/dataActions\";\n\nconst connectRequest = () => {\n  return {\n    type: \"CONNECTION_REQUEST\",\n  };\n};\n\nconst connectSuccess = (payload) => {\n  return {\n    type: \"CONNECTION_SUCCESS\",\n    payload: payload,\n  };\n};\n\nconst connectFailed = (payload) => {\n  return {\n    type: \"CONNECTION_FAILED\",\n    payload: payload,\n  };\n};\n\nconst updateAccountRequest = (payload) => {\n  return {\n    type: \"UPDATE_ACCOUNT\",\n    payload: payload,\n  };\n};\n\nexport const connect = () => {\n  return async (dispatch) => {\n    dispatch(connectRequest());\n    const abiResponse = await fetch(\"/config/abi.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const abi = await abiResponse.json();\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const CONFIG = await configResponse.json();\n    const { ethereum } = window;\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\n    if (metamaskIsInstalled) {\n      Web3EthContract.setProvider(ethereum);\n      let web3 = new Web3(ethereum);\n      try {\n        const accounts = await ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        const networkId = await ethereum.request({\n          method: \"net_version\",\n        });\n        if (networkId == CONFIG.NETWORK.ID) {\n          const SmartContractObj = new Web3EthContract(\n            abi,\n            CONFIG.CONTRACT_ADDRESS\n          );\n          dispatch(\n            connectSuccess({\n              account: accounts[0],\n              smartContract: SmartContractObj,\n              web3: web3,\n            })\n          );\n          // Add listeners start\n          ethereum.on(\"accountsChanged\", (accounts) => {\n            dispatch(updateAccount(accounts[0]));\n          });\n          ethereum.on(\"chainChanged\", () => {\n            window.location.reload();\n          });\n          // Add listeners end\n        } else {\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\n        }\n      } catch (err) {\n        dispatch(connectFailed(\"Something went wrong.\"));\n      }\n    } else {\n      dispatch(connectFailed(\"Install Metamask.\"));\n    }\n  };\n};\n\nexport const updateAccount = (account) => {\n  return async (dispatch) => {\n    dispatch(updateAccountRequest({ account: account }));\n    dispatch(fetchData(account));\n  };\n};\n","import styled from \"styled-components\";\n\n// Used for wrapping a page component\nexport const Screen = styled.div`\n  background-color: var(--primary);\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n`;\n\n// Used for providing space between components\nexport const SpacerXSmall = styled.div`\n  height: 8px;\n  width: 8px;\n`;\n\n// Used for providing space between components\nexport const SpacerSmall = styled.div`\n  height: 16px;\n  width: 16px;\n`;\n\n// Used for providing space between components\nexport const SpacerMedium = styled.div`\n  height: 24px;\n  width: 24px;\n`;\n\n// Used for providing space between components\nexport const SpacerLarge = styled.div`\n  height: 32px;\n  width: 32px;\n`;\n\n// Used for providing a wrapper around a component\nexport const Container = styled.div`\n  display: flex;\n  flex: ${({ flex }) => (flex ? flex : 0)};\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\n  width: 100%;\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\n  background-size: cover;\n  background-position: center;\n`;\n\nexport const TextTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 22px;\n  font-weight: 500;\n  line-height: 1.6;\n`;\n\nexport const TextSubTitle = styled.p`\n  color: var(--primary-text);\n  font-size: 18px;\n  line-height: 1.6;\n`;\n\nexport const TextDescription = styled.p`\n  color: var(--primary-text);\n  font-size: 16px;\n  line-height: 1.6;\n`;\n\nexport const StyledClickable = styled.div`\n  :active {\n    opacity: 0.6;\n  }\n`;\n","export const allowlistAddresses = [\n  [\"0xdecf4b112d4120b6998e5020a6b4819e490f7db6\",5],\n  [\"0xdecf4b112d4120b6998e5020a6b4819e490f7db6\",5],\n  [\"0xdecf4b112d4120b6998e5020a6b4819e490f7db6\",5],\n  [\"0xdecf4b112d4120b6998e5020a6b4819e490f7db6\",5],\n  [\"0xdecf4b112d4120b6998e5020a6b4819e490f7db6\",5],\n  [\"0xdecf4b112d4120b6998e5020a6b4819e490f7db6\",5],\n  [\"0xdecf4b112d4120b6998e5020a6b4819e490f7db6\",5],\n  [\"0xdecf4b112d4120b6998e5020a6b4819e490f7db6\",5],\n]","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst { ethers } = require('ethers')\nconst { MerkleTree } = require('merkletreejs');\nconst keccak256 = require('keccak256');\n\nimport { allowlistAddresses }  from \"./allowlist\";\n\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 50px;\n  border: none;\n  background-color: var(--secondary);\n  padding: 10px;\n  font-weight: bold;\n  color: var(--secondary-text);\n  width: 100px;\n  cursor: pointer;\n  box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 6px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100%;\n  border: none;\n  background-color: var(--primary);\n  padding: 10px;\n  font-weight: bold;\n  font-size: 15px;\n  color: var(--primary-text);\n  width: 30px;\n  height: 30px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -webkit-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  -moz-box-shadow: 0px 4px 0px -2px rgba(250, 250, 250, 0.3);\n  :active {\n    box-shadow: none;\n    -webkit-box-shadow: none;\n    -moz-box-shadow: none;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 767px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  let flag = 0;\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`購入ボタンを押してNFTをミントしてください。`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [allowlistUserAmountData, setAllowlistUserAmountData] = useState(0);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n  let nameMap;\n  let leafNodes;\n  let merkleTree;\n  let addressId = -1;\n  let claimingAddress;\n  let hexProof;\n\n  const connectFunc = () =>{\n    dispatch(connect());\n  }\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    let allowlistMaxMintAmount;\n  \n    nameMap = allowlistAddresses.map( list => list[0] );\n    leafNodes = allowlistAddresses.map(addr => ethers.utils.solidityKeccak256(['address', 'uint256'], [addr[0] , addr[1]]));\n    merkleTree = new MerkleTree(leafNodes, keccak256, { sortPairs: true});\n    addressId = nameMap.indexOf(blockchain.account);\n    if( addressId == -1){\n      //data.whitelistUserAmount = 0;\n      allowlistMaxMintAmount = 0;\n      claimingAddress = ethers.utils.solidityKeccak256(['address', 'uint256'], [allowlistAddresses[0][0] , allowlistAddresses[0][1]]);\n      hexProof = merkleTree.getHexProof(claimingAddress);    \n    }else{\n      //data.whitelistUserAmount = allowlistAddresses[addressId][1];\n      allowlistMaxMintAmount = allowlistAddresses[addressId][1];\n      claimingAddress = ethers.utils.solidityKeccak256(['address', 'uint256'], [allowlistAddresses[addressId][0] , allowlistAddresses[addressId][1]]);\n      hexProof = merkleTree.getHexProof(claimingAddress);    \n    }\n\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(` ${CONFIG.NFT_NAME} をミントしています。しばらくお待ちください。`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount,allowlistMaxMintAmount,hexProof,mintAmount)\n      .send({\n        //gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"Sorry, something went wrong please try again later.\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `${CONFIG.NFT_NAME}がミントできました! Opensea.io で確認してみましょう。`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      })\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n  const decrementMintAmount10 = () => {\n    let newMintAmount = mintAmount - 10;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    let maxMintAmountView\n\n    if( data.onlyAllowlisted == true ){\n      maxMintAmountView = Math.min(allowlistUserAmountData - data.userMintedAmount ,data.maxMintAmountPerTransaction) ;\n    }else{\n      if( data.mintCount == true ){\n        maxMintAmountView = Math.min(data.publicSaleMaxMintAmountPerAddress - data.userMintedAmount ,data.maxMintAmountPerTransaction) ;\n      }else{\n        maxMintAmountView = data.maxMintAmountPerTransaction;\n      }\n    }\n\n    if (maxMintAmountView < newMintAmount ) {\n      newMintAmount = maxMintAmountView;\n    }\n    if(newMintAmount == 0 ){\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n\n  const incrementMintAmount10 = () => {\n    let newMintAmount = mintAmount + 10;\n    let maxMintAmountView\n\n    if( data.onlyAllowlisted == true ){\n      maxMintAmountView = Math.min(allowlistUserAmountData - data.userMintedAmount ,data.maxMintAmountPerTransaction) ;\n    }else{\n      if( data.mintCount == true ){\n        maxMintAmountView = Math.min(data.publicSaleMaxMintAmountPerAddress - data.userMintedAmount ,data.maxMintAmountPerTransaction) ;\n      }else{\n        maxMintAmountView = data.maxMintAmountPerTransaction;\n      }\n    }\n\n    if (maxMintAmountView < newMintAmount ) {\n      newMintAmount = maxMintAmountView;\n    }\n    if(newMintAmount == 0 ){\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n\n\n  const getMerkleData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      nameMap = allowlistAddresses.map( list => list[0] );\n      addressId = nameMap.indexOf(blockchain.account);\n      if(data.allowlistType == 0){\n        if( addressId == -1){\n          setAllowlistUserAmountData(0);\n        }else{\n          setAllowlistUserAmountData(allowlistAddresses[addressId][1]);\n        }\n      }else if(data.allowlistType == 1){\n        setAllowlistUserAmountData(data.allowlistUserAmount);\n      }\n    }\n  };\n\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  useEffect(() => {\n    getMerkleData();\n  }, [data.loading]);\n\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: 24, backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n        <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n        <s.SpacerSmall />\n        <ResponsiveWrapper flex={1} style={{ padding: 24 }} test>\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg alt={\"example\"} src={\"/config/images/left.png\"} />\n          </s.Container>\n          <s.SpacerLarge />\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 24,\n              borderRadius: 24,\n              border: \"4px dashed var(--secondary)\",\n              boxShadow: \"0px 5px 11px 2px rgba(0,0,0,0.7)\",\n            }}\n          >\n            <s.TextTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 50,\n                fontWeight: \"bold\",\n                color: \"var(--accent-text)\",\n              }}\n            >\n              {data.totalSupply} / {CONFIG.MAX_SUPPLY} \n            </s.TextTitle>\n            <s.TextDescription\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}\n            >\n              <StyledLink target={\"_blank\"} href={CONFIG.SCAN_LINK}>\n                {truncate(CONFIG.CONTRACT_ADDRESS, 15)}\n              </StyledLink>\n            </s.TextDescription>\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  The sale has ended.\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  You can still find {CONFIG.NFT_NAME} on\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  {CONFIG.SYMBOL} 1枚につき {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL}.\n                </s.TextTitle>\n                <s.SpacerXSmall />\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--accent-text)\" }}\n                >\n                  別途ガス代がかかります。\n                </s.TextDescription>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n                      {CONFIG.NETWORK.NAME} Network のウォレットを接続してください。\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        connectFunc();\n                        getData();\n                      }}\n                    >\n                      接続\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--accent-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--accent-text)\",\n                      }}\n                    >\n\n{\n    data.loading == true\n    ? \"読み込み中です。しばらくお待ちください。\"\n    : data.paused == false\n        //in operation\n        ? data.onlyAllowlisted == true\n            //allowlist mint\n            ? allowlistUserAmountData == 0 \n                //not allow list user\n                ? \"接続したウォレットはアローリストに登録されていません。\"\n                //allow list user \n                : data.mintCount == true\n                    //with count\n                    ? 0 < allowlistUserAmountData - data.userMintedAmount\n                        ? feedback + \"あと\" + ( allowlistUserAmountData - data.userMintedAmount ) + \"枚ミントできます。\"\n                        : \"あなたのアローリストのミントの上限に達しました。\"\n                    //unlimited mint\n                    : feedback\n            //public mint\n            : data.mintCount == true\n                //with count\n                ? 0 < data.publicSaleMaxMintAmountPerAddress - data.userMintedAmount\n                    ? feedback + \"あと\" + ( data.publicSaleMaxMintAmountPerAddress - data.userMintedAmount ) + \"枚ミントできます。\"\n                    : \"ミントの上限に達しました。\"\n                //unlimited mint\n                : feedback\n        //stop\n        : data.onlyAllowlisted == true\n            //allow mint\n            ? allowlistUserAmountData == 0\n                //not allow list user\n                ? \"現在ミントは停止中です。接続したウォレットはアローリストに登録されていません。\" \n                //allow list user\n                : data.mintCount == true\n                    //with mint count\n                    ? 0 < allowlistUserAmountData - data.userMintedAmount\n                        ? \"現在ミントは停止中です。接続したウォレットはホワイトリストに登録されていて、あと\" + ( allowlistUserAmountData - data.userMintedAmount ) + \"枚ミントできます。\"\n                        : \"現在ミントは停止中です。ミントの上限に達しました。\"\n                    //unlimited mint\n                    : \"現在ミントは停止中です。\"\n            : \"現在ミントは停止中です。\"\n        \n}\n\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      \n                      \n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount10();\n                        }}\n                      >\n                        -10\n                      </StyledRoundButton>\n\n                      <s.SpacerMedium />\n\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -1\n                      </StyledRoundButton>\n                      \n                      <s.SpacerMedium />\n\n                      <s.TextDescription\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--accent-text)\",\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextDescription>\n\n                      <s.SpacerMedium />\n                      \n                      \n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +1\n                      </StyledRoundButton>\n                        \n                      <s.SpacerMedium />\n\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount10();\n                        }}\n                      >\n                        +10\n                      </StyledRoundButton>\n                      \n\n\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled=\n                        \n{\n//1: disable\n//0: able\n    claimingNft\n    ? 1\n    : data.paused == false\n        //in operation\n        ? data.onlyAllowlisted == true\n            //allow list mint\n            ? allowlistUserAmountData == 0 \n                //not allow list user\n                ? 1\n                //allow list user \n                : data.mintCount == true\n                    //with count\n                    ? 0 < allowlistUserAmountData - data.userMintedAmount\n                        ? 0\n                        : 1\n                    //unlimited mint\n                    : 0\n            //public mint\n            : data.mintCount == true\n                //with count\n                ? 0 < data.publicSaleMaxMintAmountPerAddress - data.userMintedAmount\n                    ? 0\n                    : 1\n                //unlimited mint\n                : 0\n        //stop\n        : 1\n}\n\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n\n{\n    claimingNft\n    ? \"読み込み中\"\n    : data.paused == false\n        //in operation\n        ? data.onlyAllowlisted == true\n            //allow list mint\n            ? allowlistUserAmountData == 0 \n                //not allow list user\n                ? \"STOP\"\n                //allow list user \n                : data.mintCount == true\n                    //with count\n                    ? 0 < allowlistUserAmountData - data.userMintedAmount\n                        ? \"MINT\"\n                        : \"STOP\"\n                    //unlimited mint\n                    : \"MINT\"\n            //public mint\n            : data.mintCount == true\n                //with count\n                ? 0 < data.publicSaleMaxMintAmountPerAddress - data.userMintedAmount\n                    ? \"MINT\"\n                    : \"STOP\"\n                //unlimited mint\n                : \"MINT\"\n        //stop\n        : \"STOP\"\n}\n\n                      </StyledButton>\n                    </s.Container>\n                  </>\n\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n\n          <s.SpacerLarge />\n          <s.Container flex={1} jc={\"center\"} ai={\"center\"}>\n            <StyledImg\n              alt={\"example\"}\n              src={\"/config/images/right.png\"}\n            />\n          </s.Container>\n        </ResponsiveWrapper>\n        <s.SpacerMedium />\n        <s.Container jc={\"center\"} ai={\"center\"} style={{ width: \"70%\" }}>\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            正しいネットワークに接続されているか確認してください (\n            {CONFIG.NETWORK.NAME} Mainnet) 。何度も購入ボタンを押すとその度に購入されますのでご注意ください。\n          </s.TextDescription>\n          <s.SpacerSmall />\n          <s.TextDescription\n            style={{\n              textAlign: \"center\",\n              color: \"var(--primary-text)\",\n            }}\n          >\n            ガス代が低すぎると失敗することがあります。適切なガス代を設定してください。\n          </s.TextDescription>\n        </s.Container>\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport \"./styles/reset.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}